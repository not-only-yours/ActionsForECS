name: 'CI'
on:
  push:
  pull_request:
jobs:
  test-job:
    runs-on: ubuntu-latest
    steps:
    
        - name: Check out code
          uses: actions/checkout@v2
    
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
            aws-region: eu-west-2
            
        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
          
        - name: Add SHORT_SHA env property with commit short sha
          run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
          
        - name: Build, tag, and push image to Amazon ECR
          id: build-image
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: not-only-yoursactionsforecs
          run: |
              docker build -t $ECR_REGISTRY/$ECR_REPOSITORY-Frontend:$SHORT_SHA ./Frontend
              docker build -t $ECR_REGISTRY/$ECR_REPOSITORY-Backend:$SHORT_SHA ./Backend
              docker push $ECR_REGISTRY/$ECR_REPOSITORY-Frontend:$SHORT_SHA
              docker push $ECR_REGISTRY/$ECR_REPOSITORY-Backend:$SHORT_SHA
#              echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$SHORT_SHA"





#        - name: Download task def
#          run: |
#            aws ecs describe-task-definition --task-definition ecs-fargate-example --query taskDefinition > task-definition.json
#
#        - name: Fill in the new image ID in the Amazon ECS task definition
#          id: task-def
#          uses: aws-actions/amazon-ecs-render-task-definition@v1
#          with:
#            task-definition: task-definition.json
#            container-name: ecs-fargate-example
#            image: ${{ steps.build-image.outputs.image }}
#
#        - name: Deploy Amazon ECS task definition
#          uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#          with:
#            task-definition: ${{ steps.task-def.outputs.task-definition }}
#            service: ecs-fargate-example
#            cluster: ecs-spot-test
#            wait-for-service-stability: true
